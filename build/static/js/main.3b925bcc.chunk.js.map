{"version":3,"sources":["utils/axiosUtils.js","store/actions/signupActions.js","store/reducers/signupReducer.js","store/actions/loginActions.js","store/reducers/loginReducer.js","store/actions/itemActions.js","store/reducers/itemReducer.js","store/actions/partyActions.js","store/reducers/partyReducer.js","store/reducers/index.js","components/Navigation.js","components/GuestListForm.js","components/HostedParty.js","components/HostedForm.js","components/PotLuck/PotLuckForm.js","components/CreatePartyModal.js","components/UserDashboard.js","components/LoginForm.js","components/SignUpForm.js","App.js","index.js"],"names":["axiosWithoutAuth","axios","create","baseURL","getToken","localStorage","getItem","axiosWithAuth","headers","FETCH_SIGNUP_REQUEST","FETCH_SIGNUP_SUCCESS","FETCH_SIGNUP_ERROR","initialState","isLoading","error","users","FETCH_LOGIN_REQUEST","FETCH_LOGIN_SUCCESS","FETCH_LOGIN_ERROR","SET_LOGGED_IN","SET_LOGGED_IN_FALSE","setLoggedIn","dispatch","type","isLoggedIn","FETCH_ITEMS_REQUEST","FETCH_ITEMS_SUCCESS","FETCH_ITEMS_ERROR","items","FETCH_PARTIES_REQUEST","FETCH_PARTIES_SUCCESS","FETCH_PARTIES_ERROR","combineReducers","signupReducer","state","action","payload","loginReducer","itemReducer","partyReducer","connect","signedIn","className","to","onClick","removeItem","FormikGuestListForm","withFormik","mapPropsToValues","guestName","validationSchema","Yup","shape","props","values","name","placeholder","value","HostedParty","FormikHostedForm","theme","guestAmt","date","startTime","endTime","location","budget","itemList","itemCost","description","required","touched","errors","emdTime","exact","path","component","FormikPotLuckForm","itemQty","foodItem","foodQty","id","CreatePartyModal","trigger","positiom","HostedForm","PotLuckForm","Dashboard","useState","setUsers","first_name","last_name","username","user","setUser","useEffect","get","then","res","console","log","data","catch","err","match","params","key","FormikUserForm","password","handleSubmit","formikBag","loginUser","resetForm","history","push","post","setItem","token","response","message","registerUser","window","confirm","withRouter","UserDashboard","render","LoginForm","store","createStore","reducer","applyMiddleware","thunk","logger","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3b925bcc.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const axiosWithoutAuth = () => {\r\n  return axios.create({\r\n    baseURL: 'https://party-planner-api.herokuapp.com/api'\r\n  })\r\n}\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem('token')\r\n}\r\n\r\nexport const axiosWithAuth = () => {\r\n  return axios.create({\r\n    baseURL: 'https://party-planner-api.herokuapp.com/api',\r\n    headers: {\r\n      \"Authorization\": getToken(),\r\n      \"Content-Type\": 'application/json'\r\n    }\r\n  })\r\n}","import { axiosWithoutAuth as axios } from '../../utils/axiosUtils';\r\n\r\nexport const FETCH_SIGNUP_REQUEST = 'FETCH_SIGNUP_REQUEST'\r\nexport const FETCH_SIGNUP_SUCCESS = 'FETCH_SIGNUP_SUCCESS'\r\nexport const FETCH_SIGNUP_ERROR = 'FETCH_SIGNUP_ERROR'\r\n\r\nexport const registerUser = user => dispatch => {\r\n  console.log('user', user)\r\n  dispatch({ type: FETCH_SIGNUP_REQUEST })\r\n  if (window.confirm('Thank you for registering. Please login to your new account.'))\r\n  axios()\r\n    .post('/auth/register', user)\r\n    .then(res => {\r\n      console.log('data', res.data)\r\n      dispatch({ type: FETCH_SIGNUP_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Unable to create user.\", err.response.message)\r\n      dispatch({ type: FETCH_SIGNUP_ERROR })\r\n    })\r\n\r\n}","import { FETCH_SIGNUP_REQUEST, FETCH_SIGNUP_SUCCESS, FETCH_SIGNUP_ERROR } from '../actions/signupActions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: '',\r\n  users: []\r\n}\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_SIGNUP_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      }\r\n    case FETCH_SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n          isLoading: false,\r\n          users: action.payload,\r\n          error: null\r\n      }\r\n    case FETCH_SIGNUP_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n    }\r\n}","import { axiosWithoutAuth as axios, getToken } from '../../utils/axiosUtils';\r\n\r\nexport const FETCH_LOGIN_REQUEST = 'FETCH_LOGIN_REQUEST'\r\nexport const FETCH_LOGIN_SUCCESS = 'FETCH_LOGIN_SUCCESS'\r\nexport const FETCH_LOGIN_ERROR = 'FETCH_LOGIN_ERROR'\r\nexport const SET_LOGGED_IN = 'SET_LOGGED_IN'\r\nexport const SET_LOGGED_IN_FALSE = 'SET_LOGGED_IN_FALSE'\r\n\r\nexport const loginUser = user => dispatch => {\r\n  dispatch({ type: FETCH_LOGIN_REQUEST })\r\n\r\n  axios()\r\n    .post('/auth/login', user)\r\n    .then(res => {\r\n      console.log('data', res.data)\r\n      dispatch({ type: FETCH_LOGIN_SUCCESS, payload: res.data })\r\n      localStorage.setItem(\"token\", res.data.token)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Unable to login.\", err.response.message)\r\n      dispatch({ type: FETCH_LOGIN_ERROR })\r\n    })\r\n\r\n}\r\n\r\n// Action creator to check if a user \r\n// is logged in/authenticated.\r\n// Helps display the Nav based on their status.\r\nexport const setLoggedIn = () => dispatch => {\r\n\r\n  if (!getToken()) {\r\n    return dispatch({ type: SET_LOGGED_IN })\r\n  } else if (getToken()) \r\n    return dispatch({ type: SET_LOGGED_IN_FALSE })\r\n}","import { FETCH_LOGIN_REQUEST, FETCH_LOGIN_SUCCESS, FETCH_LOGIN_ERROR, SET_LOGGED_IN, SET_LOGGED_IN_FALSE } from '../actions/loginActions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: '',\r\n  users: [],\r\n  isLoggedIn: false\r\n}\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      }\r\n    case FETCH_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n          isLoading: false,\r\n          users: action.payload,\r\n          error: null\r\n      }\r\n    case FETCH_LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      }\r\n    case SET_LOGGED_IN: \r\n      return {\r\n        ...state,\r\n        isLoggedIn: !state.isLoggedIn\r\n      }\r\n    case SET_LOGGED_IN_FALSE: \r\n      return {\r\n        ...state,\r\n        isLoggedIn: !state.isLoggedIn\r\n      }\r\n    default:\r\n      return state\r\n    }\r\n}","import { axiosWithoutAuth as axios } from '../../utils/axiosUtils';\r\n\r\nexport const FETCH_ITEMS_REQUEST = 'FETCH_ITEMS_REQUEST'\r\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS'\r\nexport const FETCH_ITEMS_ERROR = 'FETCH_ITEMS_ERROR'\r\n\r\nexport const getItems = () => dispatch => {\r\n  dispatch({ type: FETCH_ITEMS_REQUEST })\r\n\r\n  axios()\r\n    .get('/items')\r\n    .then(res => {\r\n      console.log('data', res.data)\r\n      dispatch({ type: FETCH_ITEMS_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Unable to grab items.\", err.response.message)\r\n      dispatch({ type: FETCH_ITEMS_ERROR })\r\n    })\r\n\r\n}\r\n\r\nexport const createItem = item => dispatch => {\r\n\r\n  axios()\r\n    .post(\"/items\", item)\r\n    .then(res => {\r\n      dispatch({ type: FETCH_ITEMS_SUCCESS, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: FETCH_ITEMS_ERROR, payload: err.response });\r\n    });\r\n\r\n}\r\n\r\nexport const deleteItem = id => dispatch => {\r\n  \r\n  if (window.confirm('Are you sure you want to delete item?'))\r\n  axios()\r\n    .delete(`/items/${id}`)\r\n    .then(res => {\r\n      dispatch({ type: FETCH_ITEMS_SUCCESS, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: FETCH_ITEMS_ERROR, payload: err.response });\r\n    });\r\n\r\n}\r\n\r\nexport const editItem = item => dispatch => {\r\n\r\n  axios()\r\n    .put(`/items/${item.id}`, item)\r\n    .then(res => {\r\n      dispatch({ type: FETCH_ITEMS_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: FETCH_ITEMS_ERROR, payload: err.response })\r\n    })\r\n}","import { FETCH_ITEMS_REQUEST, FETCH_ITEMS_SUCCESS, FETCH_ITEMS_ERROR } from '../actions/itemActions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: '',\r\n  items: []\r\n}\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_ITEMS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      }\r\n    case FETCH_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n          isLoading: false,\r\n          users: action.payload,\r\n          error: null\r\n      }\r\n    case FETCH_ITEMS_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n    }\r\n}","import { axiosWithoutAuth as axios } from '../../utils/axiosUtils';\r\n\r\nexport const FETCH_PARTIES_REQUEST = 'FETCH_PARTIES_REQUEST'\r\nexport const FETCH_PARTIES_SUCCESS = 'FETCH_PARTIES_SUCCESS'\r\nexport const FETCH_PARTIES_ERROR = 'FETCH_PARTIES_ERROR'\r\n\r\nexport const getParties = () => dispatch => {\r\n  dispatch({ type: FETCH_PARTIES_REQUEST })\r\n\r\n  axios()\r\n    .get('/parties')\r\n    .then(res => {\r\n      console.log('data', res.data)\r\n      dispatch({ type: FETCH_PARTIES_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Unable to find parties.\", err.response.message)\r\n      dispatch({ type: FETCH_PARTIES_ERROR })\r\n    })\r\n\r\n}\r\n\r\nexport const createParty = party => dispatch => {\r\n\r\n  axios()\r\n    .post(\"/parties\", party)\r\n    .then(res => {\r\n      dispatch({ type: FETCH_PARTIES_SUCCESS, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: FETCH_PARTIES_ERROR, payload: err.response });\r\n    });\r\n\r\n}\r\n\r\nexport const deleteParty = id => dispatch => {\r\n  \r\n  if (window.confirm('Are you sure you want to delete party?'))\r\n  axios()\r\n    .delete(`/parties/${id}`)\r\n    .then(res => {\r\n      dispatch({ type: FETCH_PARTIES_SUCCESS, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: FETCH_PARTIES_ERROR, payload: err.response });\r\n    });\r\n\r\n}","import { FETCH_PARTIES_REQUEST, FETCH_PARTIES_SUCCESS, FETCH_PARTIES_ERROR } from '../actions/partyActions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: '',\r\n  items: []\r\n}\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_PARTIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      }\r\n    case FETCH_PARTIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n          isLoading: false,\r\n          users: action.payload,\r\n          error: null\r\n      }\r\n    case FETCH_PARTIES_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as signupReducer } from './signupReducer';\r\nimport { reducer as loginReducer } from './loginReducer';\r\nimport { reducer as itemReducer } from './itemReducer';\r\nimport { reducer as partyReducer } from './partyReducer';\r\n\r\nexport default combineReducers({ signupReducer, loginReducer, itemReducer, partyReducer })","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { setLoggedIn } from '../store/actions/loginActions'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navigation = ({ setLoggedIn, signedIn }) => {\r\n    \r\n    const signOut = () => {\r\n        localStorage.removeItem('token')\r\n        setLoggedIn()\r\n    }\r\n\r\n    return (\r\n        <div className=\"Nav\">\r\n            <div className=\"Logo\">\r\n                Logo\r\n            </div>\r\n            <div className=\"NavLinks\">\r\n                <Link to=\"/home\">\r\n                    Home\r\n                </Link>\r\n                {!signedIn && <Link to=\"/signup\">\r\n                    Sign Up\r\n                </Link>}\r\n                {!signedIn && <Link to=\"/login\">\r\n                    Login\r\n                </Link>}\r\n                {signedIn && <Link to=\"/dashboard\">\r\n                    Dashboard\r\n                </Link>}\r\n                {signedIn && <Link to=\"/login\" onClick={() => signOut()}>\r\n                    Logout\r\n                </Link>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  signedIn: state.loginReducer.isLoggedIn \r\n})\r\n\r\nexport default connect(mapStateToProps, { setLoggedIn })(Navigation);","import React, { useState } from 'react';\r\nimport { withFormik, Field, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\n\r\n function GuestListForm ({ values }, props) {\r\n\r\n    return (\r\n        <section className=\"guest-list\">\r\n            <Form>\r\n                <div>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"guestName\"\r\n                        placeholder=\"Guest Name\"\r\n                        value={values.guestName}\r\n                    />\r\n                    <button>Add Guest To List</button>\r\n                </div>\r\n            </Form>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nconst FormikGuestListForm = withFormik({\r\n    mapPropsToValues({ guestName }) {\r\n        return {\r\n            guestName: guestName || \"\"\r\n        };\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        guestName: Yup.string()\r\n    })\r\n    // handleSubmit(values, { props, resetForm, setSubmitting }) {\r\n    //     axios\r\n    //     .post(\"https://reqres.in/api/users\", values)\r\n    //     .then(res => {\r\n    //         console.log(res);\r\n    //         props.setGuests(res.data);\r\n    //         resetForm();\r\n    //         setSubmitting(false);\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err);\r\n    //         setSubmitting(false);\r\n    //     });\r\n   // }\r\n})(GuestListForm);\r\n\r\nexport default FormikGuestListForm;","import React from 'react';\r\nimport FormikGuestListForm from './GuestListForm';\r\n\r\n\r\nexport default function HostedParty(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"Pot-Luck-Party\">\r\n            <h1>props.Name of Party</h1>\r\n            <h2>props.Theme of Party</h2>\r\n            <div>\r\n                <p>props.Date of Party</p>\r\n                <p>props.Start Time until props.End Time</p>\r\n                <p>props.Location</p>\r\n            </div>\r\n            <div>props.Description</div>\r\n            <button>Edit</button>\r\n            \r\n            <div>props.Number of Guests</div>\r\n            <FormikGuestListForm />\r\n            <div>props.Budget</div>\r\n            <div>props.Remaining Budget</div>\r\n            <div>props.Items/Food Needed</div>\r\n\r\n         </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nimport HostedParty from './HostedParty';\r\n\r\n\r\nfunction HostedForm({ values, touched, errors }, props ) {\r\n\r\n    return (\r\n        <section className=\"hosted-form\">\r\n            <Form>\r\n                <div>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name= \"name\"\r\n                        placeholder=\"Party's Name\"\r\n                        value={values.name}\r\n                    />\r\n                    {touched.name && errors.name && <p>{errors.name}</p>}\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"theme\"\r\n                        placeholder=\"Theme\"\r\n                        value={values.theme}\r\n                    />\r\n                    {touched.theme && errors.theme && <p>{errors.theme}</p>}\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"guestAmt\"\r\n                        placeholder=\"Number of Guests\"\r\n                        value={values.guestAmt}\r\n                    />\r\n                    {touched.guestAmt && errors.guestAmt && <p>{errors.guestAmt}</p>}\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                        type=\"text\"\r\n                        name=\"date\"\r\n                        placeholder=\"Date\"\r\n                        value={values.date}\r\n                    />\r\n                    {touched.date && errors.date &&   <p>{errors.date}</p>}\r\n                    <Field \r\n                        type=\"text\"\r\n                        name=\"startTime\"\r\n                        placeholder=\"Start Time\"\r\n                        value={values.startTime}\r\n                    />\r\n                    {touched.startTime && errors.startTime && <p>{errors.startTime}</p>}\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"endTime\"\r\n                        placeholder=\"End Time\"\r\n                        value={values.endTime}\r\n                    />\r\n                    {touched.endTime && errors.emdTime && <p>{errors.endTime}</p>}\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"location\"\r\n                        placeholder=\"Location\"\r\n                        value={values.location}\r\n                    />\r\n                    {touched.location && errors.location && <p>{errors.location}</p>}\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"budget\"\r\n                        placeholder=\"Budget\"\r\n                        value={values.budget}\r\n                    />\r\n                    {touched.budget && errors.budget && <p>{errors.budget}</p>}\r\n                    <p>Remaining budget will go here when ready</p>\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"itemList\"\r\n                        placeholder=\"Items Needed\"\r\n                        value={values.itemList}\r\n                    />\r\n                    {touched.itemList && errors.itemList && <p>{errors.itemList}</p>}\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"itemCost\"\r\n                        placeholder=\" Item Cost\"\r\n                        value={values.itemCost}\r\n                    />\r\n                    {touched.itemCost&& errors.itemCost && <p>{errors.itemCost}</p>}\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        type=\"textarea\"\r\n                        name=\"description\"\r\n                        placeholder=\"Description\"\r\n                        value={values.description}\r\n                    />\r\n                    {touched.description && errors.description && <p>{errors.description}</p>}\r\n                </div>\r\n                <button >Create</button>\r\n\r\n                <Link to=\"/hostedParty\">Go to Hosted Party</Link>\r\n                \r\n            </Form>\r\n            <Route exact path='/hostedParty' component={HostedParty}/>\r\n        </section>\r\n    );\r\n};\r\n\r\nconst FormikHostedForm = withFormik({\r\n    mapPropsToValues({ name, theme, guestAmt, date, startTime, endTime, location, budget, itemList, itemCost, description }) {\r\n        return {\r\n            name: name || \"\",\r\n            theme: theme || \"\",\r\n            guestAmt: guestAmt || \"\",\r\n            date: date || \"\",\r\n            startTime: startTime || \"\",\r\n            endTime: endTime || \"\",\r\n            location: location || \"\",\r\n            budget: budget || \"\",\r\n            itemList: itemList || \"\",\r\n            itemCost: itemCost || \"\",\r\n            description: description || \"\"\r\n        };\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string().required(\"You must name your party.\"),\r\n        theme: Yup.string(),\r\n        guestAmt: Yup.number().required(\"You must enter a number of guests\"),\r\n        date: Yup.date().required(\"Please enter your party's date.\"),\r\n        startTime: Yup.string().required(\"Please enter a start time for your party.\"),\r\n        endTime: Yup.string().required(\"Please enter the end time for your party.\"),\r\n        location: Yup.string().required(\"Please enter a location for your party.\"),\r\n        itemList: Yup.string().required(\"You must enter at least one item\"),\r\n        itemCost: Yup.number().required(\"Please enter the cost of your item\"),\r\n        budget: Yup.number().required(\"Please enter your budget\"),\r\n        description: Yup.string()  \r\n    })\r\n    //handleSubmit(values { props, resetForm, setSubmitting }) {\r\n    //  axios\r\n    //  .post(\"htps://reqres.in/api/users\", values)\r\n    //  .then(res => {\r\n    //      console.log(res);\r\n    //      props.setNewHosted(res.data);\r\n    //      resetForm();\r\n    //      setSubmitting(false);\r\n   //   }) ;   \r\n   // }\r\n})(HostedForm);\r\n\r\nexport default FormikHostedForm;","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nfunction PotLuckForm({ values, touched, errors }, props ) {\r\n    \r\n  \r\n\r\n    return (\r\n        <section className=\"pot-luck-form\">\r\n            <Form className=\"pot-luck\">\r\n                <div className=\"name-theme-numOfGuests\">\r\n                    <Field id=\"name-text\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Party's Name\"\r\n                        value={values.name}\r\n                    />\r\n                        {touched.name && errors.name && <p>{errors.name}</p>}\r\n                    <Field id=\"theme-text\"\r\n                        type=\"text\"\r\n                        name=\"theme\"\r\n                        placeholder=\"Theme\"\r\n                        value={values.theme}\r\n                    />\r\n                    {touched.theme && errors.theme && <p>{errors.theme}</p>}\r\n                    <Field id=\"guest-amt\"\r\n                        type=\"text\"\r\n                        name=\"guestAmt\"\r\n                        placeholder=\"Number Of Guests\"\r\n                        value={values.guestAmt}\r\n                    />\r\n                    {touched.guestAmt && errors.guestAmt && <p>{errors.guestAmt}</p>}\r\n                </div>\r\n                <div className= \"date-times\">\r\n                    <Field id=\"date\"\r\n                        type=\"text\"\r\n                        name=\"date\"\r\n                        placeholder=\"Date\"\r\n                        value={values.date}\r\n                    />\r\n                    {touched.date && errors.date &&   <p>{errors.date}</p>}\r\n                    <Field id=\"start-time\"\r\n                        type=\"text\"\r\n                        name=\"startTime\"\r\n                        placeholder=\"Start Time\"\r\n                        value={values.startTime}\r\n                    />\r\n                    {touched.startTime && errors.startTime && <p>{errors.startTime}</p>}\r\n                    <Field id=\"end-time\"\r\n                        type=\"text\"\r\n                        name=\"endTime\"\r\n                        placeholder=\"End Time\"\r\n                        value={values.endTime}\r\n                    />\r\n                    {touched.endTime && errors.emdTime && <p>{errors.endTime}</p>}\r\n                </div>\r\n                <div className=\"location\">\r\n                    <Field id=\"location\"\r\n                        type=\"text\"\r\n                        name=\"location\"\r\n                        placeholder=\"Location\"\r\n                        value={values.location}\r\n                    />\r\n                    {touched.location && errors.location && <p>{errors.location}</p>}\r\n                </div>\r\n                <div className=\"item-list-qty\">\r\n                    <Field id=\"item-list\"\r\n                        type=\"text\"\r\n                        name=\"itemList\"\r\n                        placeholder=\"List Item\"\r\n                        value={values.itemList}\r\n                    />\r\n                    {touched.itemList && errors.itemList && <p>{errors.itemList}</p>}\r\n                    <Field id=\"item-qty\"\r\n                        type=\"text\"\r\n                        name=\"itemQty\"\r\n                        placeholder=\"Quantity\"\r\n                        value={values.itemQty}\r\n                    />\r\n                    {touched.itemQty && errors.itemQty && <p>{errors.itemQty}</p>}\r\n                    \r\n                </div>\r\n                <div className=\"food-list-qty\">\r\n                    <Field  id=\"food-item\"\r\n                        type=\"text\"\r\n                        name=\"foodItem\"\r\n                        placeholder=\"Food Item\"\r\n                        value={values.foodItem}\r\n                    />\r\n                    {touched.foodItem && errors.foodItem && <p>{errors.foodItem}</p>}\r\n                    <Field id=\"food-qty\"\r\n                        type=\"text\"\r\n                        name=\"foodQty\"\r\n                        placeholder=\"Quantity\"\r\n                        value={values.foodQty}\r\n                    />\r\n                    {touched.foodQty && errors.foodQty && <p>{errors.foodQty}</p>}\r\n                    \r\n                </div>\r\n                <div className=\"description\">\r\n                    <Field id=\"description\"\r\n                        type=\"textarea\"\r\n                        name=\"description\"\r\n                        placeholder=\"Description\"\r\n                        value={values.description}\r\n                    />\r\n                    {touched.description && errors.description && <p>{errors.description}</p>}\r\n                </div>\r\n                <button className=\"pot-luck-button\" >Create</button>\r\n\r\n                <Link to=\"/PotLuckParty\">\r\n                    Go To Pot Luck Party\r\n                </Link>\r\n                \r\n            </Form>\r\n        </section>\r\n    );\r\n};\r\n\r\nconst FormikPotLuckForm = withFormik({\r\n    mapPropsToValues({ name, theme, guestAmt, date, startTime, endTime, location,  itemList, itemQty, foodItem, foodQty, description }) {\r\n        return {\r\n            name: name || \"\",\r\n            theme: theme || \"\",\r\n            guestAmt: guestAmt || \"\",\r\n            date: date || \"\",\r\n            startTime: startTime || \"\",\r\n            endTime: endTime || \"\",\r\n            location: location || \"\",\r\n            itemList: itemList || \"\",\r\n            itemQty: itemQty || \"\",\r\n            foodItem: foodItem || \"\",\r\n            foodQty: foodQty || \"\",\r\n            description: description || \"\"\r\n        };\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string().required(\"You must name your party.\"),\r\n        theme: Yup.string(),\r\n        guestAmt: Yup.number().required(\"You must enter a number of guests\"),\r\n        date: Yup.date().required(\"Please enter your party's date.\"),\r\n        startTime: Yup.string().required(\"Please enter a start time for your party.\"),\r\n        endTime: Yup.string().required(\"Please enter the end time for your party.\"),\r\n        location: Yup.string().required(\"Please enter a location for your party.\"),\r\n        itemList: Yup.string().required(\"You must enter at least one item\"),\r\n        itemQty: Yup.number().required(\"You must enter at least one\"),\r\n        foodItem: Yup.string(),\r\n        foodQty: Yup.number(),\r\n        description: Yup.string()\r\n    })\r\n    // handleSubmit(values, { props, resetForm, setSubmitting }) {\r\n    //     axios\r\n    //     .post(\"https://reqres.in/api/users\", values)\r\n    //     .then(res => {\r\n    //         console.log(res);\r\n    //         props.setNewParty(res.data);\r\n    //         resetForm();\r\n    //         setSubmitting(false);\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err);\r\n    //         setSubmitting(false);\r\n    //     });\r\n    // }\r\n})(PotLuckForm);\r\n\r\nexport default FormikPotLuckForm;","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\nimport HostedForm from './HostedForm';\r\nimport PotLuckForm from './PotLuck/PotLuckForm';\r\n\r\nexport default function CreatePartyModal()  {\r\n    return (\r\n        <div>\r\n        <div>\r\n            <Popup trigger={<button>Create Party</button>} positiom=\"center center\">\r\n                <div>\r\n                    <p>Please choose which type of party you would like to create.</p>\r\n                    <Link to=\"/hostedForm\">\r\n                        <button>Hosted Party</button>\r\n                    </Link>\r\n                    <Link to=\"/potLuckForm\">\r\n                        <button>Pot Luck Party</button>\r\n                    </Link>\r\n\r\n                </div>\r\n            </Popup>\r\n\r\n        </div>\r\n            <Route exact path='/hostedForm' component={HostedForm} />\r\n            <Route exact path='/potLuckForm' component={PotLuckForm} />\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, Route } from 'react-router-dom'\r\nimport CreatePartyModal from './CreatePartyModal';\r\nimport { axiosWithAuth as axios } from '../utils/axiosUtils';\r\n\r\nconst Dashboard = (props) => {\r\n    const [users, setUsers] = useState([])\r\n    const [user, setUser] = useState({\r\n        id: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        username: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios()\r\n            .get(`/users/`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setUsers(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err, 'User not found.')\r\n            })\r\n    }, [])\r\n\r\n    console.log(props)\r\n\r\n    useEffect(() => {\r\n        axios()\r\n            .get(`/users/${props.match.params.id}`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setUser(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err, 'User not found.')\r\n            })\r\n    }, [props.match.params.id])\r\n\r\n    return (\r\n        <div className=\"container-dashboard\">\r\n            <h2 key={user.id}>Hello, {user.username}</h2>\r\n            <CreatePartyModal />\r\n            {/* <button>\r\n                <Link to=\"/home\">\r\n                    Create Party\r\n                </Link>\r\n            </button> */}\r\n            <div className=\"container-options\">\r\n                <div className=\"option\">My Parties</div>\r\n                <div className=\"option\">Friends List</div>\r\n                <div className=\"option\">Invitations</div>\r\n            </div>\r\n            <div className=\"container-rsvps-and-parties\"> \r\n                <div className=\"party-list\">\r\n                    <h3>RSVP's</h3>\r\n                    <div>A bunch of parties I have RSVP'd to.</div>\r\n                </div>\r\n                <div className=\"party-list\">\r\n                    <h3>Created Parties</h3>\r\n                    <div>A bunch of parties I created.</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser, setLoggedIn } from '../store/actions/loginActions';\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst LoginForm = ({ values, touched, errors }) => {\r\n\r\n    return (\r\n        <div className=\"user-form\">\r\n            <Form>\r\n                <Field\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username\"\r\n                    value={values.username}\r\n                />\r\n                {touched.username && errors.username && <p>{errors.username}</p>}\r\n\r\n                <Field\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={values.password}\r\n                />\r\n                {touched.password && errors.password && <p>{errors.password}</p>}\r\n\r\n                <button type=\"submit\">Submit</button>\r\n\r\n                <Link to=\"/signup\">Not an existing user?</Link>\r\n            </Form>     \r\n        </div>\r\n    );\r\n};\r\n\r\nconst FormikUserForm = withFormik({\r\n    mapPropsToValues({username, password}) {\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\"\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string().required(\"Please enter an username.\"),\r\n        password: Yup.string().required(\"Password incorrect.\")\r\n    }),\r\n\r\n    handleSubmit(values, formikBag) {\r\n      formikBag.props.loginUser(values);\r\n      formikBag.props.setLoggedIn()\r\n      formikBag.resetForm()\r\n      formikBag.props.history.push('/')\r\n  }\r\n})(LoginForm);\r\n\r\nexport default connect(null, { loginUser, setLoggedIn })(FormikUserForm);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerUser } from '../store/actions/signupActions';\r\nimport { setLoggedIn } from '../store/actions/loginActions';\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst SignUpForm = ({ values, touched, errors }) => {\r\n\r\n    return (\r\n        <div className=\"user-form\">\r\n            <Form>\r\n                <Field\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"First Name\"\r\n                    value={values.first_name}\r\n                />\r\n                {touched.first_name && errors.first_name && <p>{errors.first_name}</p>}\r\n                \r\n                <Field\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={values.last_name}\r\n                />\r\n                {touched.last_name && errors.last_name && <p>{errors.last_name}</p>}\r\n\r\n                <Field\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username\"\r\n                    value={values.username}\r\n                />\r\n                {touched.username && errors.username && <p>{errors.username}</p>}\r\n\r\n                <Field\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={values.password}\r\n                />\r\n                {touched.password && errors.password && <p>{errors.password}</p>}\r\n\r\n                <button type=\"submit\">Submit</button>\r\n\r\n                <Link to=\"/login\">Already have an account?</Link>\r\n            </Form>     \r\n        </div>\r\n    );\r\n};\r\n\r\nconst FormikUserForm = withFormik({\r\n    mapPropsToValues({first_name, last_name, username, password}) {\r\n        return {\r\n            first_name: first_name || \"\",\r\n            last_name: last_name || \"\",\r\n            username: username || \"\",\r\n            password: password || \"\"\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        first_name: Yup.string().required(\"What is your first name?\"),\r\n        last_name: Yup.string().required(\"What is your last name?\"),\r\n        username: Yup.string().required(\"What is your username?\"),\r\n        password: Yup.string().required(\"Please enter a password.\")\r\n    }),\r\n\r\n    handleSubmit(values, formikBag) {\r\n        console.log(formikBag.props)\r\n        formikBag.props.registerUser(values);\r\n        formikBag.props.setLoggedIn()\r\n        formikBag.resetForm()\r\n        formikBag.props.history.push('/login')\r\n    }\r\n})(SignUpForm);\r\n\r\nexport default connect(null, { registerUser, setLoggedIn })(FormikUserForm);","import React from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport { Route, Switch, withRouter } from 'react-router-dom'\r\nimport UserDashboard from './components/UserDashboard';\r\nimport LoginForm from './components/LoginForm';\r\nimport SignUpForm from './components/SignUpForm';\r\nimport './styles.scss';\r\n\r\nimport FormikPotLuckForm from './components/PotLuck/PotLuckForm';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n   \r\n      <Navigation />\r\n      <Switch>\r\n        <Route exact path='/' component={UserDashboard} />\r\n        <Route path='/signup' render={props => <SignUpForm {...props} /> } />\r\n        <Route path='/login' component={LoginForm} />\r\n        <Route path='/dashboard' component={UserDashboard} />    \r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './store/reducers/index';\r\nimport './styles.scss';\r\nimport App from './App';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk, logger))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\ndocument.getElementById(\"root\"));"],"sourceRoot":""}